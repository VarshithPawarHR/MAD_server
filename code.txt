9.Camera

Andriod manifest:
 <uses-permission android:name="android.permission.CAMERA" />

xml :

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/cl"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#303030"
    tools:context=".MainActivity">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Tap camera to set background"
        android:textColor="@android:color/white"
        android:textSize="20sp"
        android:textStyle="bold"
        android:shadowColor="@android:color/black"
        android:shadowRadius="5"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:id="@+id/fab_camera"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:clickable="true"
        android:src="@android:drawable/ic_menu_camera"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:tint="@android:color/white"
        android:contentDescription="Take Picture" />

</androidx.constraintlayout.widget.ConstraintLayout>

mainactivity.java:

package com.example.myapplication;

import com.example.myapplication.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;

public class MainActivity extends AppCompatActivity {

    // 1. Declare UI components
    private ConstraintLayout mainLayout; // This is the 'r' from your manual
    private FloatingActionButton fabCamera;

    // 2. Launcher for Camera Permission
    private final ActivityResultLauncher<String> requestPermissionLauncher =
            registerForActivityResult(new ActivityResultContracts.RequestPermission(), isGranted -> {
                if (isGranted) {

                    launchCamera();
                } else {

                    Toast.makeText(this, "Camera permission is needed", Toast.LENGTH_SHORT).show();
                }
            });


    private final ActivityResultLauncher<Void> takePictureLauncher =
            registerForActivityResult(new ActivityResultContracts.TakePicturePreview(), bitmap -> {
                if (bitmap != null) {
                    // This is your simplified logic
                    Drawable drawable = new BitmapDrawable(getResources(), bitmap);
                    mainLayout.setBackground(drawable);
                }
            });

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        mainLayout = findViewById(R.id.cl);
        fabCamera = findViewById(R.id.fab_camera);


        fabCamera.setOnClickListener(v -> {
            checkCameraPermissionAndLaunch();
        });
    }

    private void checkCameraPermissionAndLaunch() {
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA)
                == PackageManager.PERMISSION_GRANTED) {
            // Permission is granted
            launchCamera();
        } else {
            // Request permission
            requestPermissionLauncher.launch(Manifest.permission.CAMERA);
        }
    }

    private void launchCamera() {

        takePictureLauncher.launch(null);
    }
}

-------------------------------------------------------------------------------------------------------------------------------

3. App that generates random colour on click

package com.example.myapplication;
import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;
import java.util.Random;
public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);

        Button btn = findViewById(R.id.button);

        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Random gen = new Random();

                findViewById(R.id.main).setBackgroundColor(
                        Color.rgb(gen.nextInt(256),gen.nextInt(256),gen.nextInt(256))

                );
            }
        });


    }
}


â€”------------------------------------------------------------------------

question number 5 context menu

package com.example.myapplication;

import android.graphics.Color;
import android.os.Bundle;
import android.view.MenuItem;
import android.widget.Button;
import android.widget.PopupMenu;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.constraintlayout.widget.ConstraintLayout;

public class MainActivity extends AppCompatActivity {

    private ConstraintLayout mainLayout;
    private Button changeColorButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        mainLayout = findViewById(R.id.cl);
        changeColorButton = findViewById(R.id.button_change_color);

        // This is the "short way"
        changeColorButton.setOnClickListener(view -> {

            // 1. Create a PopupMenu
            PopupMenu popupMenu = new PopupMenu(MainActivity.this, view); // Anchors menu to the button

            // 2. Add menu items programmatically
            popupMenu.getMenu().add("Red");
            popupMenu.getMenu().add("Green");
            popupMenu.getMenu().add("Blue");
            popupMenu.getMenu().add("Default");

            // 3. Set a listener for when an item is clicked
            popupMenu.setOnMenuItemClickListener(menuItem -> {
                CharSequence title = menuItem.getTitle();

                if (title.equals("Red")) {
                    mainLayout.setBackgroundColor(Color.RED);
                } else if (title.equals("Green")) {
                    mainLayout.setBackgroundColor(Color.GREEN);
                } else if (title.equals("Blue")) {
                    mainLayout.setBackgroundColor(Color.BLUE);
                } else if (title.equals("Default")) {
                    mainLayout.setBackgroundColor(Color.parseColor("#303030")); // A default dark grey
                }

                return true;
            });

            // 4. Show the menu
            popupMenu.show();
        });
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------

2.Simple calculator

package com.example.myapplication;
import androidx.activity.EdgeToEdge;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    EditText num1, num2;
    Button add, sub, mul, div, clear;
    TextView result;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);

        //take numbers
        num1 = findViewById(R.id.Num1);
        num2 = findViewById(R.id.Num2);

        //take buttons
        add = findViewById(R.id.add);
        sub = findViewById(R.id.sub);
        mul = findViewById(R.id.mul);
        div = findViewById(R.id.div);
        clear = findViewById(R.id.clear);
        result = findViewById(R.id.textView2);


        // --- ADD BUTTON ---
        add.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String s1 = num1.getText().toString();
                String s2 = num2.getText().toString();

                if (s1.isEmpty() || s2.isEmpty()) {
                    result.setText("Enter both the numbers!!");
                } else {
                    try {
                        double n1 = Double.parseDouble(s1);
                        double n2 = Double.parseDouble(s2);

                        double r = n1 + n2;
                        // --- FIX IS HERE ---
                        result.setText(String.valueOf(r)); // Convert double to String

                    } catch (NumberFormatException e) {
                        result.setText("Invalid");
                    }
                }
            }
        });

        // --- SUBTRACT BUTTON ---
        sub.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String s1 = num1.getText().toString();
                String s2 = num2.getText().toString();

                if (s1.isEmpty() || s2.isEmpty()) {
                    result.setText("Enter both the numbers!!");
                } else {
                    try {
                        double n1 = Double.parseDouble(s1);
                        double n2 = Double.parseDouble(s2);
                        double r = n1 - n2;
                        result.setText(String.valueOf(r));
                    } catch (NumberFormatException e) {
                        result.setText("Invalid");
                    }
                }
            }
        });

        // --- MULTIPLY BUTTON ---
        mul.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String s1 = num1.getText().toString();
                String s2 = num2.getText().toString();

                if (s1.isEmpty() || s2.isEmpty()) {
                    result.setText("Enter both the numbers!!");
                } else {
                    try {
                        double n1 = Double.parseDouble(s1);
                        double n2 = Double.parseDouble(s2);
                        double r = n1 * n2;
                        result.setText(String.valueOf(r));
                    } catch (NumberFormatException e) {
                        result.setText("Invalid");
                    }
                }
            }
        });

        // --- DIVIDE BUTTON ---
        div.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String s1 = num1.getText().toString();
                String s2 = num2.getText().toString();

                if (s1.isEmpty() || s2.isEmpty()) {
                    result.setText("Enter both the numbers!!");
                } else {
                    try {
                        double n1 = Double.parseDouble(s1);
                        double n2 = Double.parseDouble(s2);

                        // Check for divide by zero
                        if (n2 == 0) {
                            result.setText("Cannot divide by zero");
                        } else {
                            double r = n1 / n2;
                            result.setText(String.valueOf(r));
                        }
                    } catch (NumberFormatException e) {
                        result.setText("Invalid");
                    }
                }
            }
        });

        // --- CLEAR BUTTON ---
        clear.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                num1.setText("");
                num2.setText("");
                result.setText("Result!!");
            }
        });

    }
}

â€”----------------------------------------------------------------------------------------------------


7.App to phone call.

package com.example.myapplication;

import androidx.core.view.WindowInsetsCompat;

public class MainActivity extends AppCompatActivity {
    EditText phone_number;
    Button callbutton;


    @Override
    protected void onCreate(Bundle savedInstanceState) {


        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);


        phone_number = findViewById(R.id.phonenumber);
        callbutton = findViewById(R.id.callbutton);


        callbutton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String number = phone_number.getText().toString();
            // opens only phone app
                Intent intent = new Intent(Intent.ACTION_DIAL);
                // PARTICULARLY TELLS ITS PHONE APPLICATION
                intent.setData(Uri.parse("tel: "+ number));

                startActivity(intent);
            }
        });



    }
}



â€”------------------------------------------------------------------------------------------------------

7.App to send sms message

package com.example.myapplication;


public class MainActivity extends AppCompatActivity {

    EditText sms_num;
    EditText sms_msg;
    Button send_msg;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        setContentView(R.layout.activity_main);

        EditText sms_msg = findViewById(R.id.sms_msg);
        Button send_msg = findViewById(R.id.sendmsg);
        EditText sms_num = findViewById(R.id.num_msg);

        send_msg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String num = sms_num.getText().toString();
                String msg = sms_msg.getText().toString();
                Intent intent = new Intent(Intent.ACTION_SENDTO);
                intent.setData(Uri.parse("smsto: "+ num ));
                intent.putExtra("sms_body", msg);
                startActivity(intent);
            }
        });
    }
}






â€”----------------------------------------------------------------------------------------------------



8. App to make a dialogue box to confirm the change of background color


package com.example.myapplication;

import java.util.*;

public class MainActivity extends AppCompatActivity {
   Button btn;
   ConstraintLayout mainlayout;
   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main);




       Random random = new Random();


       btn = findViewById(R.id.btn);
        mainlayout = findViewById(R.id.main);

       btn.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);

               builder.setTitle("Confirm");
               builder.setMessage("Are you sure you want to change background color");

               builder.setPositiveButton("yes", new DialogInterface.OnClickListener() {
                   @Override
                   public void onClick(DialogInterface dialog, int which) {
                       int randomcolor = Color.rgb(random.nextInt(255),random.nextInt(255),random.nextInt(255));
                       mainlayout.setBackgroundColor(randomcolor);
                   }

               });

               builder.setNegativeButton("No", new DialogInterface.OnClickListener() {
                   @Override
                   public void onClick(DialogInterface dialog, int which) {
                       dialog.dismiss();
                   }
               });

               AlertDialog dialog = builder.create();
               dialog.show();


           }
       });
   }
}

â€”--------------------------------------------------------------------------------------------

1.Design four checkboxes namely any four food items and one button. Find total amount of food items selected in Toast message after clicking the button. 

//use checkboxes

package com.example.myapplication;

public class MainActivity extends AppCompatActivity {
  ;
   final double biriyani = 30;
   final double kebab = 50;
   final double rotti = 50;


   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main);

       CheckBox c1 = findViewById(R.id.r1);
       CheckBox c2 = findViewById(R.id.r2);
       CheckBox c3 = findViewById(R.id.r3);

       Button b1 = findViewById(R.id.b1);

       b1.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               double total = 0;
              
               if (c1.isChecked())
               {
                   total +=rotti;

               }
               if(c2.isChecked())
               {
                   total += biriyani;
               }
               if (c3.isChecked())
               {
                   total+= kebab;
               }

               String msg = "Total amount :" + total;

               Toast.makeText(MainActivity.this,msg,Toast.LENGTH_LONG).show();
           }
       });

   }
}


â€”---------------------------------------------------------------------
PART - B:

Lab program number 5 

//NOTE : HERE IN PGM THEY HAVE ASKED 2 FILES WRITE SOMETHING IN OTHER FILE 

Add this to androidManifest.xml:

<uses-permission android:name="android.permission.INTERNET" />

package com.example.myapplication;


public class MainActivity extends AppCompatActivity {


   EditText  urlEdit;
   Button loadbtn;


   WebView mywebview;


   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main);


       urlEdit = findViewById(R.id.textView);
       loadbtn = findViewById(R.id.button);
       mywebview = findViewById(R.id.webview);


       //new codes
       mywebview.setWebViewClient(new WebViewClient());
       mywebview.getSettings().setJavaScriptEnabled(true);


       mywebview.loadUrl("https://www.google.com");


       loadbtn.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               String url = urlEdit.getText().toString().trim();
               if (!url.isEmpty()) {
                   mywebview.loadUrl(url);
               }
               else{
                   mywebview.loadUrl("https://www.google.com");
               }


           }
       });




   }
}

â€”------------------------------------------------------------------------------
Lab Pgm 2

package com.example.myapplication;


public class MainActivity extends AppCompatActivity {


   Button btn;
   ProgressBar prg;
   //create a handler like async only better way
   // A Handler to communicate with the UI thread
   private final Handler mainHandler = new Handler(Looper.getMainLooper());


   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       EdgeToEdge.enable(this);
       setContentView(R.layout.activity_main);


       btn = findViewById(R.id.button);
       prg = findViewById(R.id.progressBar);


       btn.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
               start_counting();
           }
       });
   }


   private void start_counting() {
       // Disable the button so the user can't click it again
       btn.setEnabled(false);
       Toast.makeText(this,"starting count...",Toast.LENGTH_LONG).show();


       new Thread(new Runnable() {
           @Override
           public void run() {


               for (int i = 0; i <= 1000; i++) {
                   try {
                       Thread.sleep(100);
                   } catch (InterruptedException e) {
                       e.printStackTrace();
                   }


                   final  int progress = i;


                   mainHandler.post(new Runnable() {
                       @Override
                       public void run() {
                           prg.setProgress(progress);
                       }
                   });
               } // <-- 'for' loop ends here


               // This runs *after* the for loop is complete
               mainHandler.post(new Runnable() {
                   @Override
                   public void run() {
                       Toast.makeText(MainActivity.this, "Count complete!", Toast.LENGTH_LONG).show();
                       btn.setEnabled(true);
                   }
               });


           } // <-- 'run()' method ends here
       }).start(); // <-- 'new Thread()' ends and starts here
   } // <-- 'start_counting()' method ends here
} // <-- 'MainActivity' class ends here

â€”------------------------------------------------------------------------------------
Lab program  3

package com.example.myapplication;


public class MainActivity extends AppCompatActivity {


   private ProgressBar batteryProgressBar;
   private TextView batteryLevelText;
   private LinearLayout mainLayout;


   // 1. Create the BroadcastReceiver
   private BroadcastReceiver batteryReceiver = new BroadcastReceiver() {
       @Override
       public void onReceive(Context context, Intent intent) {
           // Get battery level from the Intent
           int level = intent.getIntExtra(BatteryManager.EXTRA_LEVEL, 0);


           // Update the ProgressBar
           batteryProgressBar.setProgress(level);


           // Update the TextView
           batteryLevelText.setText(level + "%");


           // Change the background color based on the level
           if (level <= 20) {
               // Red: 0% to 20%
               mainLayout.setBackgroundColor(Color.RED);
           } else if (level <= 60) {
               // Blue: 21% to 60%
               mainLayout.setBackgroundColor(Color.BLUE);
           } else {
               // Green: 61% to 100%
               mainLayout.setBackgroundColor(Color.GREEN);
           }
       }
   };


   @Override
   protected void onCreate(Bundle savedInstanceState) {
       super.onCreate(savedInstanceState);
       setContentView(R.layout.activity_main);


       // Find the views
       batteryProgressBar = findViewById(R.id.batteryProgressBar);
       batteryLevelText = findViewById(R.id.batteryLevelText);
       mainLayout = findViewById(R.id.mainLayout);
   }


   @Override
   protected void onResume() {
       super.onResume();
       // 2. Register the receiver to listen for battery changes
       this.registerReceiver(this.batteryReceiver, new IntentFilter(Intent.ACTION_BATTERY_CHANGED));
   }


   @Override
   protected void onPause() {
       super.onPause();
       // 3. Unregister the receiver to save battery and prevent leaks
       this.unregisterReceiver(this.batteryReceiver);
   }
}



â€”------------------------------------------------------------------------------------------------------------------
Lab pgm 4:

DB helper.java

package com.yourpackage; // Make sure this matches your package name

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DBHelper extends SQLiteOpenHelper {

    // Database Info
    private static final String DATABASE_NAME = "users.db";
    private static final int DATABASE_VERSION = 1;

    // Table Info
    private static final String TABLE_NAME = "users";
    private static final String COLUMN_ID = "id";
    private static final String COLUMN_NAME = "name";

    // Constructor
    public DBHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    // Called when the database is created for the first time
    @Override
    public void onCreate(SQLiteDatabase db) {
        // SQL query to create the table
        String createTableQuery = "CREATE TABLE " + TABLE_NAME + " (" +
                COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                COLUMN_NAME + " TEXT)";
        db.execSQL(createTableQuery);
    }

    // Called when the database needs to be upgraded
    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // Drop the older table if it exists and create a new one
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
        onCreate(db);
    }

    // --- Database Operations ---

    /**
     * Inserts a new name into the database.
     */
    public boolean insertName(String name) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues values = new ContentValues();
        
        values.put(COLUMN_NAME, name); // Put the name into the 'name' column

        // Insert the row
        // insert() returns the row ID of the new row, or -1 if an error occurred
        long result = db.insert(TABLE_NAME, null, values);
        
        db.close(); // Close database connection
        
        return result != -1; // Return true if insert was successful
    }

    /**
     * Reads all names from the database and returns them as a String.
     */
    public String getAllNames() {
        StringBuilder stringBuilder = new StringBuilder();
        SQLiteDatabase db = this.getReadableDatabase();

        // SQL query to select all data
        String selectQuery = "SELECT * FROM " + TABLE_NAME;
        
        Cursor cursor = db.rawQuery(selectQuery, null);

        // Loop through all rows and add to the string
        if (cursor.moveToFirst()) {
            do {
                // Get the data from the "name" column (column index 1)
                String name = cursor.getString(1);
                stringBuilder.append(name + "\n");
            } while (cursor.moveToNext());
        }

        // Clean up
        cursor.close();
        db.close();

        if (stringBuilder.length() == 0) {
            return "No data in database.";
        } else {
            return stringBuilder.toString();
        }
    }
}


Mainactivity.java

package com.yourpackage; // Make sure this matches your package name

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    // UI Views
    EditText nameEditText;
    Button addButton;
    TextView dataTextView;

    // Database Helper
    DBHelper dbHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Find views
        nameEditText = findViewById(R.id.nameEditText);
        addButton = findViewById(R.id.addButton);
        dataTextView = findViewById(R.id.dataTextView);

        // Initialize the database helper
        dbHelper = new DBHelper(this);

        // Set click listener for the "Add" button
        addButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Get the text from the EditText
                String name = nameEditText.getText().toString().trim();

                // Check if the name is not empty
                if (!name.isEmpty()) {
                    // Insert the name into the database
                    boolean isInserted = dbHelper.insertName(name);

                    if (isInserted) {
                        Toast.makeText(MainActivity.this, "Data inserted", Toast.LENGTH_SHORT).show();
                        // Clear the EditText
                        nameEditText.setText("");
                        // Refresh the data display
                        loadDataIntoTextView();
                    } else {
                        Toast.makeText(MainActivity.this, "Error inserting data", Toast.LENGTH_SHORT).show();
                    }
                } else {
                    nameEditText.setError("Please enter a name");
                }
            }
        });

        // Load any existing data from the database when the app starts
        loadDataIntoTextView();
    }


    private void loadDataIntoTextView() {
        String data = dbHelper.getAllNames();
        dataTextView.setText(data);
    }
}
â€”---------------------------------------------------------------------------------------------------

Lab program 6:

Only xml here

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp"
    tools:context=".MainActivity">

    <ImageView
        android:id="@+id/imageView"
        android:layout_width="150dp"
        android:layout_height="150dp"
        android:layout_centerInParent="true"
        android:src="@mipmap/ic_launcher" /> <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:orientation="vertical">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal">

            <Button
                android:id="@+id/blinkButton"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="Blink" />

            <Button
                android:id="@+id/moveButton"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="Move" />
        </LinearLayout>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="horizontal">

            <Button
                android:id="@+id/rotateButton"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="Rotate" />

            <Button
                android:id="@+id/zoomButton"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="Zoom" />
        </LinearLayout>

    </LinearLayout>

</RelativeLayout>




res/anim/blink.xml:

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:fillAfter="true">
    <alpha
        android:duration="500"
        android:fromAlpha="1.0"
        android:toAlpha="0.0"
        android:repeatCount="1"
        android:repeatMode="reverse" />
</set>



res/anim/move.xml

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:fillAfter="true">
    <translate
        android:duration="800"
        android:fromXDelta="0%"
        android:toXDelta="150%"
        android:repeatCount="1"
        android:repeatMode="reverse" />
</set>


res/anim/rotate.xml:


<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:fillAfter="true">
    <rotate
        android:duration="1000"
        android:fromDegrees="0"
        android:toDegrees="360"
        android:pivotX="50%"
        android:pivotY="50%" />
</set>


res/anim/zoom.xml:

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:fillAfter="true">
    <scale
        android:duration="1000"
        android:fromXScale="1.0"
        android:fromYScale="1.0"
        android:toXScale="2.0"
        android:toYScale="2.0"
        android:pivotX="50%"
        android:pivotY="50%"
        android:repeatCount="1"
        android:repeatMode="reverse" />
</set>


mainactivity .java:


package com.yourpackage; // Make sure this matches your package name

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.widget.Button;
import android.widget.ImageView;

public class MainActivity extends AppCompatActivity {

    ImageView imageView;
    Button blinkButton, moveButton, rotateButton, zoomButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Find all the views
        imageView = findViewById(R.id.imageView);
        blinkButton = findViewById(R.id.blinkButton);
        moveButton = findViewById(R.id.moveButton);
        rotateButton = findViewById(R.id.rotateButton);
        zoomButton = findViewById(R.id.zoomButton);

        // Set listener for Blink
        blinkButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Load the animation from the anim file
                Animation blinkAnimation = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.blink);
                // Start the animation on the image
                imageView.startAnimation(blinkAnimation);
            }
        });

        // Set listener for Move
        moveButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Animation moveAnimation = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.move);
                imageView.startAnimation(moveAnimation);
            }
        });

        // Set listener for Rotate
        rotateButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Animation rotateAnimation = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.rotate);
                imageView.startAnimation(rotateAnimation);
            }
        });

        // Set listener for Zoom
        zoomButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Animation zoomAnimation = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.zoom);
                imageView.startAnimation(zoomAnimation);
            }
        });
    }
}












